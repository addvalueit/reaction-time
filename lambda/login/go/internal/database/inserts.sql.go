// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: inserts.sql

package database

import (
	"context"
)

const getUserByName = `-- name: GetUserByName :one
SELECT id, name FROM users WHERE name = $1
`

func (q *Queries) GetUserByName(ctx context.Context, name string) (User, error) {
	row := q.db.QueryRow(ctx, getUserByName, name)
	var i User
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}

const insertUser = `-- name: InsertUser :one
INSERT INTO users (name)
VALUES ($1)
RETURNING id, name
`

func (q *Queries) InsertUser(ctx context.Context, name string) (User, error) {
	row := q.db.QueryRow(ctx, insertUser, name)
	var i User
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}
